apiVersion: v1
kind: Namespace
metadata:
  name: velero
  labels:
    app.kubernetes.io/name: velero
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: velero
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: velero
  labels:
    app.kubernetes.io/name: velero
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
- nonResourceURLs: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: velero
  labels:
    app.kubernetes.io/name: velero
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: velero
subjects:
- kind: ServiceAccount
  name: velero
  namespace: velero
---
apiVersion: v1
kind: Secret
metadata:
  name: cloud-credentials
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
type: Opaque
data:
  # Base64 encoded credentials for cloud storage
  # Replace with actual credentials for your backup storage
  cloud: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: velero
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
    component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: velero
  template:
    metadata:
      labels:
        app.kubernetes.io/name: velero
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8085"
        prometheus.io/path: "/metrics"
    spec:
      restartPolicy: Always
      serviceAccountName: velero
      containers:
      - name: velero
        image: velero/velero:v1.12.0
        ports:
        - name: metrics
          containerPort: 8085
        command:
          - /velero
        args:
          - server
          - --uploader-type=restic
        volumeMounts:
        - name: plugins
          mountPath: /plugins
        - name: cloud-credentials
          mountPath: /credentials
        - name: scratch
          mountPath: /scratch
        env:
        - name: VELERO_SCRATCH_DIR
          value: /scratch
        - name: VELERO_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LD_LIBRARY_PATH
          value: /plugins
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /credentials/cloud
        - name: AWS_SHARED_CREDENTIALS_FILE
          value: /credentials/cloud
        - name: AZURE_CREDENTIALS_FILE
          value: /credentials/cloud
      initContainers:
      - image: velero/velero-plugin-for-aws:v1.8.0
        imagePullPolicy: IfNotPresent
        name: velero-plugin-for-aws
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /target
          name: plugins
      volumes:
      - name: cloud-credentials
        secret:
          secretName: cloud-credentials
      - name: plugins
        emptyDir: {}
      - name: scratch
        emptyDir: {}
---
apiVersion: velero.io/v1
kind: BackupStorageLocation
metadata:
  name: default
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
spec:
  provider: aws
  objectStorage:
    bucket: velero-backups
    prefix: kubernetes-backups
  config:
    region: us-east-1
    s3ForcePathStyle: "true"
    # For local MinIO or other S3-compatible storage
    s3Url: http://minio.minio:9000
---
apiVersion: velero.io/v1
kind: VolumeSnapshotLocation
metadata:
  name: default
  namespace: velero
  labels:
    app.kubernetes.io/name: velero
spec:
  provider: aws
  config:
    region: us-east-1